% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vars_funs.R
\name{vars_recode}
\alias{vars_recode}
\title{Replace numerically coded variables with human-readable values}
\usage{
vars_recode(data, cols = dplyr::everything(), type = "long")
}
\arguments{
\item{data}{A data frame or tibble with columns to have values replaced.}

\item{cols}{A \code{<tidy-select>} column select or vector of column names.
Looks for all columns with numerically encoded character values by default.}

\item{type}{Output/recode type. Options are: \code{"long"}, which transforms
EXT_WALL = 1 to EXT_WALL = Frame; \code{"short"}, for EXT_WALL = FRME; and
\code{"code"}, which keeps the original values (useful for removing
improperly coded values, see note below).}
}
\value{
The input data frame with re-encoded values for the specified
  columns.
}
\description{
The AS/400 stores characteristic values in a numerically encoded
format. This function can be used to translate those values into a
human-readable format. For example, EXT_WALL = 2 will become
EXT_WALL = "Frame + Masonry". Note that the values and their translations are
specified in \code{\link{vars_dict}}.
}
\note{
Values which are in the data but are NOT in \code{\link{vars_dict}}
  will be converted to NA. For example, there is no numeric value 3 for AIR,
  so it will become NA.
}
\examples{

# Recode all char columns
vars_recode(chars_sample_universe)
vars_recode(chars_sample_universe, type = "short")

# Recode only the specified columns
vars_recode(chars_sample_universe, cols = dplyr::starts_with("GAR"))
vars_recode(chars_sample_universe, cols = "GAR1_SIZE")
}
\seealso{
Other vars_funs: 
\code{\link{vars_check_class}()},
\code{\link{vars_rename}()}
}
\concept{vars_funs}
