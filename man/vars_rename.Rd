% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vars_funs.R
\name{vars_rename}
\alias{vars_rename}
\title{Bulk rename variables from CCAO SQL to standardized or pretty names
and visa versa}
\usage{
vars_rename(
  data,
  names_from = NULL,
  names_to = NULL,
  output_type = "inplace",
  dictionary = ccao::vars_dict,
  type = NULL,
  dict = NULL
)
}
\arguments{
\item{data}{A data frame or tibble with columns to be renamed.}

\item{names_from}{The source/name type of data. See description}

\item{names_to}{The target names. See description}

\item{output_type}{Output type. Either \code{"inplace"}, which renames the
input data frame, or \code{"vector"}, which returns a named character
vector with  the construction new_col_name = old_col_name.}

\item{dictionary}{The dictionary used to translate names. Uses
\code{\link{vars_dict}} by default. Use \code{\link{vars_dict_legacy}} for
legacy data column names.}

\item{type}{Deprecated. Use \code{output_type} instead.}

\item{dict}{Deprecated. Use \code{dictionary} instead.}
}
\value{
The input data frame with columns renamed.
}
\description{
Bulk rename columns from one type of CCAO data to another. For
example, rename all columns pulled from SQL to their standard names used
in modeling. Or, rename all standard modeling names to "pretty" names for
publication. This function will only rename things specified in
the user-supplied \code{dictionary} argument, all other names in the data
will remain unchanged.

Options for \code{names_from} and \code{names_to} are specific to the
specified \code{dictionary}. Run this function with \code{names_from} equal
'to \code{NULL} to see a list of available options for the specified
'dictionary.
}
\examples{

# Rename column names from SQL
sample_data <- chars_sample_universe[1:5, 18:27]
sample_data

vars_rename(
  data = sample_data,
  names_from = "sql",
  names_to = "standard",
  dictionary = ccao::vars_dict_legacy
)
vars_rename(
  data = sample_data,
  names_from = "sql",
  names_to = "pretty",
  dictionary = ccao::vars_dict_legacy
)

# No renames will occur since no column names here are from SQL
vars_rename(
  data = class_dict[1:5, 1:5],
  names_from = "sql",
  names_to = "pretty",
  dictionary = ccao::vars_dict_legacy
)

# With data from Athena
sample_data_athena <- chars_sample_athena[1:5, 1:10]
sample_data_athena

vars_rename(
  data = sample_data_athena,
  names_from = "athena",
  names_to = "model",
  dictionary = ccao::vars_dict
)
vars_rename(
  data = sample_data_athena,
  names_from = "athena",
  names_to = "pretty",
  dictionary = ccao::vars_dict
)
}
\seealso{
Other vars_funs: 
\code{\link{vars_recode}()}
}
\concept{vars_funs}
